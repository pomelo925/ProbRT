# Generated Dockerfile for GPU
FROM {{ docker.base_image_gpu | default(docker.base_image) }}

WORKDIR {{ docker.working_dir }}

# GPU support
{% if docker.gpu.enabled %}
# Install CUDA runtime
RUN apt-get update && apt-get install -y --no-install-recommends \
    cuda-runtime-{{ docker.gpu.cuda_version }} \
    && rm -rf /var/lib/apt/lists/*

# Set CUDA environment
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
{% endif %}

# Copy application files
COPY . .

# Install dependencies
{% if docker.base_image contains "python" %}
RUN if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
{% if docker.gpu.enabled %}
RUN if [ -f requirements-gpu.txt ]; then pip install -r requirements-gpu.txt; fi
{% endif %}
{% endif %}
{% if docker.base_image contains "node" %}
RUN if [ -f package.json ]; then npm install; fi
{% endif %}

# Expose ports
{% for port in docker.ports.expose %}
EXPOSE {{ port }}
{% endfor %}

# Health check
{% if docker.healthcheck %}
HEALTHCHECK --interval={{ docker.healthcheck.interval }} --timeout={{ docker.healthcheck.timeout }} --retries={{ docker.healthcheck.retries }} \
  CMD {{ docker.healthcheck.test | join(' ') }}
{% endif %}

# Default command
CMD ["{{ docker.entrypoint | default('python', 'app.py') }}"]
