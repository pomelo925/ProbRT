# Docker configuration for containerization
# This file contains all settings for generating Docker-related files

# Docker image settings
base_image: python:3.10  # Base Docker image
base_image_gpu: nvidia/cuda:11.8-runtime-ubuntu20.04  # Base image for GPU version
working_dir: /app  # Working directory inside container

# Port configuration
ports:
  expose: [8000]  # Ports to expose in Dockerfile
  publish: "8000:8000"  # Port mapping for docker-compose

# Service configuration
service_name: app  # Service name in docker-compose
container_name: my-app  # Container name

# Environment variables
environment:
  - NODE_ENV=production
  - PORT=8000

# Volume mounts
volumes:
  - "./:/app"  # Mount current directory to /app

# Docker Compose settings
compose:
  version: "3.8"
  restart_policy: unless-stopped
  
# Build configuration
build:
  context: "."
  dockerfile: "Dockerfile"

# GPU support configuration
gpu:
  enabled: false
  cuda_version: "11.8"
  
# Health check
healthcheck:
  test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  interval: 30s
  timeout: 10s
  retries: 3

# Advanced Docker Compose settings for complex projects
advanced:
  # GUI support settings
  gui_support:
    enabled: false
    x11_volumes:
      - "${XAUTHORITY:-$HOME/.Xauthority}:${XAUTHORITY:-/root/.Xauthority}"
      - "/tmp/.X11-unix:/tmp/.X11-unix"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      - DISPLAY=${DISPLAY}
  
  # Device access settings
  device_access:
    enabled: false
    volumes:
      - "/dev:/dev"
      - "/run/udev:/run/udev"
      - "/var/run/docker.sock:/var/run/docker.sock"
    
  # Network settings
  network:
    mode: bridge  # bridge, host, none
    
  # Container privileges
  privileged: false
  
  # Workspace volumes (project-specific)
  workspace_volumes: []
  
  # Additional environment variables
  additional_env: []
